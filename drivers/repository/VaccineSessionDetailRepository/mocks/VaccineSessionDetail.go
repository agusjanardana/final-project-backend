// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	records "vaccine-app-be/drivers/records"

	mock "github.com/stretchr/testify/mock"
)

// VaccineSessionDetail is an autogenerated mock type for the VaccineSessionDetail type
type VaccineSessionDetail struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, sessionId, fmId
func (_m *VaccineSessionDetail) Create(ctx context.Context, sessionId int, fmId int) (records.VaccineSessionDetail, error) {
	ret := _m.Called(ctx, sessionId, fmId)

	var r0 records.VaccineSessionDetail
	if rf, ok := ret.Get(0).(func(context.Context, int, int) records.VaccineSessionDetail); ok {
		r0 = rf(ctx, sessionId, fmId)
	} else {
		r0 = ret.Get(0).(records.VaccineSessionDetail)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int, int) error); ok {
		r1 = rf(ctx, sessionId, fmId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDetailByFamilyId provides a mock function with given fields: ctx, fmid
func (_m *VaccineSessionDetail) GetDetailByFamilyId(ctx context.Context, fmid int) ([]records.VaccineSessionDetail, error) {
	ret := _m.Called(ctx, fmid)

	var r0 []records.VaccineSessionDetail
	if rf, ok := ret.Get(0).(func(context.Context, int) []records.VaccineSessionDetail); ok {
		r0 = rf(ctx, fmid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]records.VaccineSessionDetail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, fmid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDetailById provides a mock function with given fields: ctx, id
func (_m *VaccineSessionDetail) GetDetailById(ctx context.Context, id int) (records.VaccineSessionDetail, error) {
	ret := _m.Called(ctx, id)

	var r0 records.VaccineSessionDetail
	if rf, ok := ret.Get(0).(func(context.Context, int) records.VaccineSessionDetail); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(records.VaccineSessionDetail)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDetailBySessionId provides a mock function with given fields: ctx, sessionId
func (_m *VaccineSessionDetail) GetDetailBySessionId(ctx context.Context, sessionId int) ([]records.VaccineSessionDetail, error) {
	ret := _m.Called(ctx, sessionId)

	var r0 []records.VaccineSessionDetail
	if rf, ok := ret.Get(0).(func(context.Context, int) []records.VaccineSessionDetail); ok {
		r0 = rf(ctx, sessionId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]records.VaccineSessionDetail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, sessionId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
